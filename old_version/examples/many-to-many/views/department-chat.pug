doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title #{department.name} - #{organization.name}
    link(rel="stylesheet", href="/css/human-agent-chat.css")
    link(rel="stylesheet", href="/css/chat-shared.css")
    script(src="/htmx/htmx.min.js")
    script(type="module", src="/js/org-chat.js")
  body
    .container
      nav.sidebar
        .org-header
          h1.org-name #{organization.name}
        
        .user-info
          if user.photoURL
            img.user-avatar(src=user.photoURL, alt=user.displayName)
          else
            .user-avatar-initials #{user.displayName.split(' ').map(n => n[0]).join('').substring(0, 2).toUpperCase()}
          .user-name #{user.displayName}
        
        .section
          .section-header Channels
          ul.channel-list
            each channel in channels
              li.channel-item
                a(href=`/channel/${channel.id}`) # #{channel.name}
        
        .section
          .section-header Departments
          ul.department-list
            each departmentItem in departments
              li.department-item(class=departmentItem.id === department.id ? 'active' : '')
                a(href=`/department/${departmentItem.id}`) @ #{departmentItem.name}
      
      main.content
        .chat-header
          h2 
            span.department-symbol @
            | #{department.name}
          .header-actions
            button.action-button#create-project-request Create Project Request
            button.action-button Share File
          
        .chat-area
          #chat-container.chat-container
            // Chat UI will be initialized here
        
      aside.members-sidebar
        .section-header Department Members
        ul.member-list
          each member in members
            li.member-item(class=member.isAgent ? 'agent-member' : '')
              if member.photoURL
                img.member-avatar(src=member.photoURL, alt=member.displayName)
              else
                .member-avatar-initials #{member.displayName.split(' ').map(n => n[0]).join('').substring(0, 2).toUpperCase()}
              .member-details
                .member-name #{member.displayName}
                if member.isAgent
                  .member-badge AI

      footer
        p HumanAgentChat Â© 2023

    // Firebase scripts
    script(src="https://www.gstatic.com/firebasejs/10.7.0/firebase-app.js")
    script(src="https://www.gstatic.com/firebasejs/10.7.0/firebase-firestore.js")
    script(src="https://www.gstatic.com/firebasejs/10.7.0/firebase-auth.js")
    script(src="https://www.gstatic.com/firebasejs/10.7.0/firebase-storage.js")
    
    // Initialize chat
    script.
      // This would be fetched from your environment in a real app
      const firebaseConfig = {
        apiKey: "YOUR_API_KEY",
        authDomain: "YOUR_AUTH_DOMAIN",
        projectId: "YOUR_PROJECT_ID",
        storageBucket: "YOUR_STORAGE_BUCKET",
        messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
        appId: "YOUR_APP_ID"
      };
      
      // User info passed from server
      const currentUser = {
        id: "#{user.id}",
        displayName: "#{user.displayName}",
        email: "#{user.email}",
        photoURL: "#{user.photoURL || ''}"
      };
      
      // Chat info
      const chatInfo = {
        path: "#{chatPath}",
        type: "department",
        name: "#{department.name}",
        agentIds: !{JSON.stringify(agentIds)}
      };
      
      document.addEventListener('DOMContentLoaded', () => {
        initializeOrgChat(firebaseConfig, currentUser, chatInfo);
      });